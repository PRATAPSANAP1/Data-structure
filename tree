#include<iostream>
using namespace std;
class Node
{
    int data;
    Node* left;
    Node* right;
    Node(int x)
    {
        data=x;
        left=nullptr;
        right=nullptr;
    }
Node *newnode,*temp,*current,*root;


void insert(Node* &current,Node*temp)
{
    char a;
    cout<<"Which side(L/R):";
    cin>>a;

    if(a=='l'||a=='L')
    {
        if(current==NULL)
        {
            current=temp;
        }
        else{
            insert(current->left,temp);
        }
    }
    if(a=='R'||a=='r')
    {
        if(current==NULL)
        {
            current=temp;
        }
        else{
            insert(current->right,temp);
        }
    }

}
void insertroot()
{
    int data;
cout<<"Enter the the number:";
cin>>data;
temp=new Node(data);
if(root==NULL)
{
    root=temp;
}
else
{
insert(root,temp);
}
}
void preorder(Node* root)
{
    if(root==NULL)
    {
        return;
    }
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}
void inorder(Node* root)
{
    if(root==NULL)
    {
        return;
    }
    
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}
void postorder(Node* root)
{
    if(root==NULL)
    {
        return;
    }
    
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";
}
int totalNode(Node* root)
{
     if(root==NULL)
    {
        return 0;
    }
    return 1 + totalNode(root->left) + totalNode(root->right);
}
void leafNode(Node* root)
{
 if(root==NULL)
    {
        return;
    }
    if(root->left==NULL&&root->right==NULL)
    {
        cout<<root->data<<" ";
        return;
    }
    leafNode(root->left);
    leafNode(root->right);
}
};
int main()
{
    Node p[10];
    Node* root;
    int ch,i,n;
    do
    {
       cout<<"1.Insert\n2.preorder\n3.Inorder\n4.Postorder\n5.Total Node\n6.Leaf Node\n\nEnter your choice:";
       cin>>ch;
       switch (ch)
       {
       case 1:
    cout<<"How much student record you want to fill:";
    cin>>n;
    for(i=0;i<n;i++)
    {
       p[i].insertroot();
    }
        break;
       
       case 2:
        for(i=0;i<n;i++)
    {
       p[i].preorder(root);
    }
       break;

       case 3:
        for(i=0;i<n;i++)
    {
       s[i].inorder(root);
    }
       break;

       case 4:
        for(i=0;i<n;i++)
    {
       s[i].postorder(root);
    }
       break;

       case 5:
       cout<<"Total Nodes:"<<s[i].totalNode(root)<<endl;
       break;

       case 6:
       cout<<"Leaf Node:"<<s[i].leafNode(root)<<endl;
       break;

       default:
       cout<<"Wrong choice!!";
        break;
       }
       cout<<"Do you want to continue[press 1]:";
       cin>>ch;
    } while (ch==1);
    
    return 0;
}
